[project]

  authors = [
    { name = "Sasan Jacob Rasti", email = "sasan_jacob.rasti@tu-dresden.de" },
    { name = "Sebastian Krahmer", email = "sebastian.krahmer@tu-dresden.de" },

    { name = "Laura Fiedler", email = "laura.fiedler@tu-dresden.de" },
    { name = "Maximilian Schmidt", email = "maximilian.schmidt@tu-dresden.de" },
  ]
  dependencies = [
    "ieeh-power-system-data-model>=2.3.1",
    "loguru>=0.7.2",
    "pydantic>=2.8.2",
  ]
  description = "A toolbox for Python based control of DIgSILENT PowerFactory"
  license = { file = "LICENSE" }
  name = "ieeh-powerfactory-tools"
  readme = "README.md"
  requires-python = ">=3.10,<3.13"
  version = "3.0.2"

  [project.optional-dependencies]
    io-basic   = ["pandas"]
    io-feather = ["pandas", "pyarrow"]

  [project.urls]
    Source = "https://github.com/ieeh-tu-dresden/powerfactory-tools"

[build-system]
  build-backend = "hatchling.build"
  requires      = ["hatchling"]

[tool.uv]
  dev-dependencies = [
    "commitizen>=3.28.0",
    "ipykernel>=6.29.5",
    "mypy>=1.11.0",
    "pandas>=2.2.2",
    "pyarrow>=17.0.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.6.1",
    "pytest>=8.3.1",
    "ruff>=0.5.5",
  ]

[tool.hatch.metadata]
  allow-direct-references = true

[tool.hatch.build.targets.wheel]
  packages = ["src/powerfactory_tools"]

[tool.ruff]
  line-length = 120

  [tool.ruff.lint]
    ignore = [
      "ANN002",
      "ANN003",
      "ANN101",
      "ANN102",
      "C901",
      "D100",
      "D101",
      "D102",
      "D103",
      "D104",
      "D105",
      "D106",
      "D107",
      "D202",
      "D203",
      "D401",
      "E402",
      "E501",
    ]
    select = ["ALL"]

    [tool.ruff.lint.flake8-type-checking]
      runtime-evaluated-decorators = ["pydantic.dataclasses.dataclass"]

    [tool.ruff.lint.isort]
      force-single-line = true

    [tool.ruff.lint.pydocstyle]
      convention = "pep257"

    [tool.ruff.lint.pep8-naming]
      classmethod-decorators = ["classmethod", "pydantic.field_validator"]

    [tool.ruff.lint.pylint]
      max-args = 10

    [tool.ruff.lint.flake8-import-conventions.extend-aliases]
      "collections.abc"  = "cabc"
      "datetime"         = "dt"
      "geopandas"        = "gpd"
      "numpy.typing"     = "npt"
      "rasterio"         = "rio"
      "shapely.geometry" = "shg"
      "typing"           = "t"

[tool.ruff.lint.per-file-ignores]
  "tests/*" = ["ANN001", "ANN201", "INP001", "S101"]

[tool.black]
  line-length = 120

[tool.commitizen]
  name = "cz_conventional_commits"
  tag_format = "$version"
  version = "3.0.2"
  version_files = [
    ".zenodo.json:version",
    "CITATION.cff:cff-version",
    "pyproject.toml:version",
    "src/powerfactory_tools/__version__.py:VERSION",
  ]

[tool.mypy]
  follow_imports         = "normal"
  ignore_missing_imports = true
  mypy_path              = "src/powerfactory_tools"
  namespace_packages     = true
  plugins                = "pydantic.mypy"
  strict_optional        = true
  warn_no_return         = true
  warn_redundant_casts   = true
  warn_unused_ignores    = true

[tool.pytest.ini_options]
  python_files = "test_*.py"
  testpaths    = ["tests"]

[tool.coverage.run]
  branch = true
  omit   = ["__pypackages__/*", "build/*", "tests/*"]
  source = ["src/powerfactory_tools"]

[tool.coverage.report]
  show_missing = true

[tool.coverage.xml]
  output = "coverage.xml"

[tool.pyright]
  exclude = ["**/__pycache__"]
