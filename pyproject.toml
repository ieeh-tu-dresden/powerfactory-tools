[project]

  authors = [
    { name = "Sasan Jacob Rasti", email = "sasan_jacob.rasti@tu-dresden.de" },

    { name = "Maximilian Schmidt", email = "maximilian.schmidt@tu-dresden.de" },
    { name = "Sebastian Krahmer", email = "sebastian.krahmer@tu-dresden.de" },
  ]
  dependencies = [
    "ieeh-power-system-data-model @ git+https://github.com/ieeh-tu-dresden/power-system-data-model.git@sasanjac/26-feat-add-support-for-fuse-types",
    "loguru",
    "pydantic",
  ]
  description = "A toolbox for Python based control of DIgSILENT PowerFactory"
  license = { file = "LICENSE" }
  name = "ieeh-powerfactory-tools"
  readme = "README.md"
  requires-python = ">=3.10,<3.11"
  version = "1.5.1"

  [project.urls]
    Source = "https://github.com/ieeh-tu-dresden/powerfactory-tools"

  [project.optional-dependencies]

[build-system]
  build-backend = "pdm.pep517.api"
  requires      = ["pdm-pep517"]

[tool]

  [tool.pdm]

    [tool.pdm.dev-dependencies]
      deployment = ["commitizen"]
      formatting = ["black[jupyter]"]
      linter     = ["ruff"]
      prototype  = ["ipykernel"]
      test       = ["pytest", "pytest-cov", "pytest-xdist"]
      typing     = ["mypy"]

[tool.ruff]
  ignore = [
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "C901",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "D203",
    "D401",
    "E402",
    "E501",
  ]
  line-length = 120
  select = ["ALL"]

  [tool.ruff.flake8-type-checking]
    runtime-evaluated-decorators = ["pydantic.dataclasses.dataclass"]

  [tool.ruff.isort]
    force-single-line = true

  [tool.ruff.pydocstyle]
    convention = "pep257"

  [tool.ruff.pep8-naming]
    classmethod-decorators = [
      "classmethod",
      "pydantic.root_validator",
      "pydantic.validator",
    ]

  [tool.ruff.per-file-ignores]
    "tests/*" = ["ANN001", "ANN201", "INP001", "S101"]

[tool.black]
  line_length = 120

[tool.commitizen]
  name = "cz_conventional_commits"
  tag_format = "$version"
  version = "1.5.1"
  version_files = [
    ".zenodo.json:version",
    "CITATION.cff:cff-version",
    "pyproject.toml:version",
  ]

[tool.mypy]
  follow_imports         = "normal"
  ignore_missing_imports = true
  mypy_path              = "powerfactory_tools"
  namespace_packages     = true
  plugins                = "pydantic.mypy"
  strict_optional        = true
  warn_no_return         = true
  warn_redundant_casts   = true
  warn_unused_ignores    = true

[tool.pytest.ini_options]
  addopts      = "-ra --strict-markers -p pytester --cov=powerfactory_tools --cov-report xml --cov-report term -n 2"
  python_files = "test_*.py"
  testpaths    = ["tests"]

[tool.coverage.run]
  branch = true
  omit   = ["__pypackages__/*", "build/*", "tests/*"]
  source = ["powerfactory_tools"]

[tool.coverage.report]
  show_missing = true

[tool.coverage.xml]
  output = "coverage.xml"

[tool.pyright]
  exclude = ["**/__pycache__"]
