# :author: Sasan Jacob Rasti <sasan_jacob.rasti@tu-dresden.de>
# :author: Sebastian Krahmer <sebastian.krahmer@tu-dresden.de>
# :copyright: Copyright (c) Institute of Electrical Power Systems and High Voltage Engineering - TU Dresden, 2022-2023.
# :license: BSD 3-Clause

from __future__ import annotations

import enum


class PFClassId(enum.Enum):
    AREA = "ElmArea"
    COMPOUND_GRID_ELEMENT = "ElmFolder"  # e.g. a compound grid graphic consisting of multiple elements
    COMPOUND_MODEL = "ElmComp"  # e.g. a compound generator with multiple functional slots as part of a template model
    COUPLER = "ElmCoup"
    CUBICLE = "StaCubic"
    CURRENT_SOURCE_AC = "ElmIac"
    EXTERNAL_GRID = "ElmXNet"
    DATETIME = "SetTime"
    DESKTOP = "SetDesktop"
    DSL_MODEL = "ElmDsl"
    FOLDER = "IntFolder"
    FUSE = "RelFuse"
    FUSE_TYPE = "TypFuse"
    GENERATOR = "ElmGenstat"
    GRID = "ElmNet"
    GRID_GRAPHIC = "IntGrfnet"
    LINE = "ElmLne"
    LINE_TYPE = "TypLne"
    LOAD = "ElmLod"
    LOAD_LV = "ElmLodlv"
    LOAD_LV_PART = "ElmLodlvp"
    LOAD_MV = "ElmLodmv"
    LOAD_TYPE_GENERAL = "TypLod"
    LOAD_TYPE_LV = "TypLodlv"
    LOAD_TYPE_MV = "TypDistrf"
    MEASUREMENT_FILE = "ElmFile"
    PROJECT_FOLDER = "IntPrjfolder"
    PROJECT_SETTINGS = "SetPrj"
    PVSYSTEM = "ElmPvsys"
    REFERENCE = "IntRef"
    RESULT = "ElmRes"
    SCENARIO = "IntScenario"
    SCRIPT_DPL = "ComDpl"
    SCRIPT_PYTHON = "ComPython"
    SELECTION = "SetSelect"
    SETTINGS_FOLDER = "SetFold"
    SETTINGS_FOLDER_UNITS = "IntUnit"
    SOURCE_TYPE_HARMONIC_CURRENT = "TypHmccur"
    STATION_CONTROLLER = "ElmStactrl"
    STUDY_CASE = "IntCase"
    SWITCH = "StaSwitch"
    TEMPLATE = "IntTemplate"
    TERMINAL = "ElmTerm"
    TRANSFORMER_2W = "ElmTr2"
    TRANSFORMER_2W_TYPE = "TypTr2"
    TRANSFORMER_3W = "ElmTr3"
    TRANSFORMER_3W_TYPE = "TypTr3"
    UNIT_VARIABLE = "SetVariable"
    VARIABLE_MONITOR = "IntMon"  # Variable monitor definition
    VARIANT = "IntScheme"
    VARIANT_CONFIG = "IntAcscheme"
    VARIANT_STAGE = "IntSstage"
    ZONE = "ElmZone"


class FolderType(enum.Enum):
    CB_RATINGS = "cbrat"
    CIM_MODEL = "cim"
    CHARACTERISTICS = "chars"
    COMMON_MODE_FAILURES = "common"
    DEMAND_TRANSFERS = "demand"
    DIAGRAMS = "dia"
    EQUIPMENT_TYPE_LIBRARY = "equip"
    FAULTS = "fault"
    GENERIC = "gen"
    GENERATOR_COST_CURVES = "cstgen"
    GENERATOR_EFFICIENCY_CURVES = "effgen"
    LIBRARY = "lib"
    MVAR_LIMIT_CURVES = "mvar"
    NETWORK_DATA = "netdat"
    NETWORK_MODEL = "netmod"
    OPERATIONAL_LIBRARY = "oplib"
    OPERATION_SCENARIOS = "scen"
    OUTAGES = "outage"
    QP_CURVES = "qpc"
    PROBABILISTIC_ASSESSMENT = "rnd"
    RUNNING_ARRANGEMENTS = "ra"
    REMEDIAL_ACTION_SCHEMES = "ras"
    SCRIPTS = "script"
    STATION_WARE = "sw"
    STUDY_CASES = "study"
    TABLE_REPORTS = "report"
    TARIFFS = "tariff"
    TEMPLATES = "templ"
    THERMAL_RATINGS = "therm"
    USER_DEFINED_MODELS = "blk"
    VARIATIONS = "scheme"
    V_CONTROL_CURVES = "ucc"


class MetricPrefix(enum.Enum):
    a = "a"
    f = "f"
    p = "p"
    n = "n"
    u = "u"
    m = "m"
    EMPTY = ""
    k = "k"
    M = "M"
    G = "G"
    T = "T"
    P = "P"
    E = "E"


class Currency(enum.Enum):
    USD = "USD"
    EUR = "EUR"
    JPY = "JPY"
    GBP = "GBP"
    AUD = "AUD"
    CAD = "CAD"
    CHF = "CHF"
    CNY = "CNY"
    SEK = "SEK"
    MXN = "MXN"
    NZD = "NZD"
    SGD = "SGD"
    HKD = "HKD"
    NOK = "NOK"
    KRW = "KRW"
    TRY = "TRY"
    INR = "INR"
    RUB = "RUB"
    BRL = "BRL"
    ZAR = "ZAR"
    CLP = "CLP"
