name: Create release

on:
  workflow_dispatch:
  milestone:
    types: [closed]

jobs:
  test-code:
    uses: ./.github/workflows/test-code.yml

  create-release:
    name: Release a new version
    runs-on: ubuntu-latest
    needs: [test-code]
    env:
      PYTHON_VERSION: "3.10"

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Temporarily disable 'include administrators' default branch protection
        uses: benjefferies/branch-protection-bot@af281f37de86139d1c7a27b91176b5dc1c2c827c  # v1.1.2
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: false

      - name: Update license year
        uses: FantasticFiasco/action-update-license-year@9135da8f9ccc675217e02357c744b6b541d45cb0  # v3.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge license year pull request
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: gh pr merge --squash --delete-branch --admin

      - name: Find new version
        id: cz
        uses: commitizen-tools/commitizen-action@a49cac8e98f3954a16e107f026f71cf84b17706c  # 0.23.1
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          push: false
          commit: false
          changelog: false

      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0
      
      - name: Cache the default location where Cargo installs the binaries for Rust tools (uv) and dependencies
        id: cache-cargo-bin
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f  # v4.2.1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin

      - name: Install uv and set the python version
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.28"  # install a specific version of uv
          enable-cache: true
          python-version: ${{ env.PYTHON_VERSION  }}

      - name: Install the project including dependencies
        run: uv venv --python ${{ env.PYTHON_VERSION }} && uv sync

      - name: Update year in copyright notice in all files
        run: |
          uv run python -c 'import datetime as dt
          import os
          import re
          from pathlib import Path

          def update_year_in_copyright_notice(directory: str) -> None:
              year_pattern = re.compile(
                  r"(Copyright \(c\) Institute of Electrical Power Systems and High Voltage Engineering - TU Dresden, \d{4}-)\d{4}",
              )
              for root, _, files in os.walk(directory):
                  for file in files:
                      if file.endswith(".py"):
                          file_path = Path(root) / file
                          with file_path.open("r", encoding="utf-8") as f:
                              content = f.read()
                          updated_content = year_pattern.sub(rf"\g<1>{dt.datetime.now(dt.timezone.utc).year}", content)
                          with Path(file_path).open("w", encoding="utf-8") as f:
                              f.write(updated_content)

          dirs = ["src", "tests"]
          for d in dirs:
              update_year_in_copyright_notice(d)'

      - name: Get current date
        id: get_date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Update .zenodo.json date
        run: echo "`jq '.publication_date="${{ steps.get_date.outputs.date }}"' .zenodo.json`" > .zenodo.json

      - name: Update .zenodo.json url
        run: echo "`jq '.related_identifiers[0].identifier="https://github.com/ieeh-tu-dresden/powerfactory-tools/tree/${{ steps.cz.outputs.version }}"' .zenodo.json`" > .zenodo.json

      - name: Bump version and create changelog
        uses: commitizen-tools/commitizen-action@a49cac8e98f3954a16e107f026f71cf84b17706c  # 0.23.1
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          changelog_increment_filename: body.md

      - name: Restore 'include administrators' default branch protection
        uses: benjefferies/branch-protection-bot@af281f37de86139d1c7a27b91176b5dc1c2c827c  # v1.1.2
        if: always()
        with:
          access_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.event.repository.default_branch }}
          enforce_admins: ${{ steps.disable_include_admins.outputs.initial_status }}

      - name: Build Python packages
        run: uvx --from build pyproject-build --installer uv

      - name: Publish Python packages
        run: uvx twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda  # v2.2.1
        with:
          body_path: body.md
          tag_name: ${{ steps.commitizen.outputs.version }}
          files: |
            dist/*.whl
            dist/*.tar.gz
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
